/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Server_Interface;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class OwnerForm extends javax.swing.JFrame {

    /**
     * Creates new form OwnerForm
     */
    public OwnerForm() {
        initComponents();
        
        //Set form in center
        this.setLocationRelativeTo(null);
        
        Load();
    }
    String dbURL="jdbc:sqlserver://MSI\\SQLEXPRESS:1433; databaseName=Motel; user=test; password=1234567890";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        txtIDContract = new javax.swing.JTextField();
        txtIDRoom = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        txtPhoneNumberOwner = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtIDOwner = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        dcsDateEnroll = new com.toedter.calendar.JDateChooser();
        jPanel29 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAdd = new javax.swing.JTable();
        btnClient = new javax.swing.JButton();
        btnRegisterRoomMate = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblContract = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        btnRefreshTableRoomOrder = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContract_Management = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnRefreshContract = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        btnAddAccount = new javax.swing.JButton();
        btnModifyAccount = new javax.swing.JButton();
        btnDelAccount = new javax.swing.JButton();
        btnClearInfoAccount = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();
        jPanel18 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        txtNameClient_Account = new javax.swing.JTextField();
        txtIDClient_Account = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnRefreshTableAccount = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNoti = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtElecPrice = new javax.swing.JTextField();
        txtWaterPrice = new javax.swing.JTextField();
        txtInterPrice = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        btnCancelTotal = new javax.swing.JButton();
        txtIDBill = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIDContract_Bill = new javax.swing.JTextField();
        btnCancelContract = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        btnWarn = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        txtElec = new javax.swing.JTextField();
        txtWater = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnCalculatorBill = new javax.swing.JButton();
        txtIDRoom_Bill = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblBill = new javax.swing.JTable();
        txtCurrentTime = new javax.swing.JTextField();
        btnRefreshBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel2.setText("Thông Tin Đặt Phòng");

        jPanel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel45.setText("ID_Contract:");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel46.setText("ID_Room:");

        txtIDContract.setFocusable(false);

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel48.setText("Phone Owner:");

        txtPhoneNumberOwner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneNumberOwnerKeyPressed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel26.setText("Đăng Ký");

        jLabel28.setText("ID_Owner");

        jLabel29.setText("Date Enroll");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel48)
                            .addComponent(jLabel46)
                            .addComponent(jLabel45)
                            .addComponent(jLabel29))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dcsDateEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtIDContract, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(txtIDRoom, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPhoneNumberOwner, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIDOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(txtIDContract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(txtIDRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(txtPhoneNumberOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(txtIDOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel29))
                    .addComponent(dcsDateEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setMaximumSize(new java.awt.Dimension(73, 25));
        btnAdd.setMinimumSize(new java.awt.Dimension(73, 25));
        btnAdd.setPreferredSize(new java.awt.Dimension(73, 25));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnModify.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnModify.setText("Sửa");
        btnModify.setMaximumSize(new java.awt.Dimension(73, 25));
        btnModify.setMinimumSize(new java.awt.Dimension(73, 25));
        btnModify.setPreferredSize(new java.awt.Dimension(73, 25));
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnDel.setText("Xóa");
        btnDel.setMaximumSize(new java.awt.Dimension(73, 25));
        btnDel.setMinimumSize(new java.awt.Dimension(73, 25));
        btnDel.setPreferredSize(new java.awt.Dimension(73, 25));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnClear.setText("Làm Mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblAdd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblAdd);

        btnClient.setText("Đăng Ký Người Thuê");
        btnClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientActionPerformed(evt);
            }
        });

        btnRegisterRoomMate.setText("Đăng Ký Thành Viên Trong Phòng");
        btnRegisterRoomMate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterRoomMateActionPerformed(evt);
            }
        });

        tblContract.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblContract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblContractMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblContract);

        jLabel27.setText("Thông tin hợp đồng");

        btnRefreshTableRoomOrder.setText("Refresh");
        btnRefreshTableRoomOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTableRoomOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(213, 213, 213)
                        .addComponent(btnRefreshTableRoomOrder))
                    .addComponent(jScrollPane7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnClient, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                    .addComponent(btnRegisterRoomMate, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnRefreshTableRoomOrder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClient)
                        .addGap(18, 18, 18)
                        .addComponent(btnRegisterRoomMate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đặt Phòng", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblContract_Management.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblContract_Management);
        if (tblContract_Management.getColumnModel().getColumnCount() > 0) {
            tblContract_Management.getColumnModel().getColumn(1).setHeaderValue("ID_Client");
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 820, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(163, 163, 163)))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel1.setText("Quản Lý Hợp Đồng");

        btnRefreshContract.setText("Refresh");
        btnRefreshContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshContractActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(331, 331, 331)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefreshContract)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel1)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRefreshContract)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hợp Đồng", jPanel2);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel14.setText("Quản Lý Tài Khoản");

        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAddAccount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnAddAccount.setText("Thêm");
        btnAddAccount.setMaximumSize(new java.awt.Dimension(73, 25));
        btnAddAccount.setMinimumSize(new java.awt.Dimension(73, 25));
        btnAddAccount.setPreferredSize(new java.awt.Dimension(73, 25));
        btnAddAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAccountActionPerformed(evt);
            }
        });

        btnModifyAccount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnModifyAccount.setText("Sửa");
        btnModifyAccount.setMaximumSize(new java.awt.Dimension(73, 25));
        btnModifyAccount.setMinimumSize(new java.awt.Dimension(73, 25));
        btnModifyAccount.setPreferredSize(new java.awt.Dimension(73, 25));
        btnModifyAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyAccountActionPerformed(evt);
            }
        });

        btnDelAccount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnDelAccount.setText("Xóa");
        btnDelAccount.setMaximumSize(new java.awt.Dimension(73, 25));
        btnDelAccount.setMinimumSize(new java.awt.Dimension(73, 25));
        btnDelAccount.setPreferredSize(new java.awt.Dimension(73, 25));
        btnDelAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelAccountActionPerformed(evt);
            }
        });

        btnClearInfoAccount.setText("Làm Mới");
        btnClearInfoAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearInfoAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnModifyAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearInfoAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnAddAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModifyAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClearInfoAccount)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccountMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblAccount);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel50.setText("ID_Client:");

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel51.setText("Name");

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel52.setText("User Name");

        txtIDClient_Account.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDClient_AccountKeyPressed(evt);
            }
        });

        Password.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        Password.setText("Password");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(jLabel50)
                    .addComponent(jLabel52)
                    .addComponent(Password))
                .addGap(20, 20, 20)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addComponent(txtUserName)
                    .addComponent(txtNameClient_Account)
                    .addComponent(txtIDClient_Account))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel50)
                    .addComponent(txtIDClient_Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(txtNameClient_Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        btnRefreshTableAccount.setText("Refresh");
        btnRefreshTableAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTableAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 71, Short.MAX_VALUE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(328, 328, 328)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefreshTableAccount)
                .addGap(17, 17, 17))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRefreshTableAccount)
                        .addGap(7, 7, 7)))
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tài Khoản", jPanel14);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 25)); // NOI18N
        jLabel15.setText("Quản Lý Sinh Hoạt Phí");

        jPanel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblNoti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblNoti);

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel18.setText("Điện:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel19.setText("Nước:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel20.setText("Internet:");

        txtElecPrice.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtElecPrice.setFocusable(false);
        txtElecPrice.setMinimumSize(new java.awt.Dimension(6, 25));
        txtElecPrice.setPreferredSize(new java.awt.Dimension(59, 25));

        txtWaterPrice.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtWaterPrice.setFocusable(false);
        txtWaterPrice.setPreferredSize(new java.awt.Dimension(59, 25));

        txtInterPrice.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtInterPrice.setPreferredSize(new java.awt.Dimension(59, 25));

        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtTotal.setPreferredSize(new java.awt.Dimension(59, 25));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel22.setText("Tổng:");

        btnPay.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnPay.setText("Đã thanh toán");
        btnPay.setEnabled(false);
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel23.setText("Phí sinh hoạt trong tháng");

        btnCancelTotal.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnCancelTotal.setText("Hủy");

        jLabel3.setText("ID Bill");

        jLabel4.setText("ID Contract");

        btnCancelContract.setText("Trả Phòng");
        btnCancelContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelContractActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(btnPay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelContract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel23)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)
                            .addComponent(jLabel22)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIDBill, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                            .addComponent(txtIDContract_Bill)
                            .addComponent(txtElecPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtWaterPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtInterPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel23)
                .addGap(30, 30, 30)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(15, 15, 15)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(txtElecPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWaterPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInterPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIDContract_Bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)))
                .addGap(28, 28, 28)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPay)
                    .addComponent(btnCancelTotal)
                    .addComponent(btnCancelContract))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnWarn.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnWarn.setText("Nhắc nhở");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel24.setText("Điện:");

        txtElec.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtElec.setPreferredSize(new java.awt.Dimension(59, 25));

        txtWater.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtWater.setPreferredSize(new java.awt.Dimension(59, 25));

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel25.setText("Nước:");

        jLabel16.setText("(Tiền Điện: số điện * 3000VNĐ)");

        jLabel17.setText("(Tiền Nước: số nước * 7000VNĐ)");

        btnCalculatorBill.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnCalculatorBill.setText("Tính tiền");
        btnCalculatorBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculatorBillActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel30.setText("Phòng");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel16))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel25)
                                .addComponent(jLabel30))
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtElec, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIDRoom_Bill, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtWater, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnWarn, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(btnCalculatorBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDRoom_Bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtElec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnWarn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalculatorBill)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addContainerGap())
        );

        tblBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tblBill);

        txtCurrentTime.setFocusable(false);

        btnRefreshBill.setText("Refresh");
        btnRefreshBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addComponent(txtCurrentTime, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addGap(191, 191, 191)
                        .addComponent(btnRefreshBill)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtCurrentTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshBill))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Đóng Phí", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void Load(){
        txtElec.setText("0");
        txtWater.setText("0");
        txtInterPrice.setText("0");
        
        loadInfoRoom();
        loadTableContractManagement();
        loadTableAccountManagement();
        setIDBill();
        loadTableNotiInBill();
        loadTableBillManagement();
        
        //Set ID contract
        setIDContract();
                
//        LoadtbAdd();
//        LoadtbRoom();
//        LoadtbType();
//        LoadtbAcc();
//        LoadtbCost();
    }      
    
    //Show thông tin về phòng trọ hiện tại đã có người lên bảng đầu tiên status='live'
    private void loadInfoRoom(){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT R.ID_Room, R.ID_Type, R.Room_Title, C.Name_Client, Co.status FROM Contract Co JOIN Room R ON Co.ID_Room=R.ID_Room JOIN Client C ON Co.ID_representativeClient=C.ID_Client WHERE Co.status='live';";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel m=new DefaultTableModel(new Object[]{"ID_Room", "ID_Type","Room_Title", "Owner", "Status"}, 0);
               tblAdd.setModel(m);
            while (rs.next()) {
                ((DefaultTableModel)tblAdd.getModel()).addRow(new Object[]{
                    rs.getString(1), 
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                });
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //Sinh ID Contract tự động
    private void setIDContract(){
        String id=null;
        String ancestors; //Tien to C
        int numberID; //so duoi 00x || 0xx
        
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT MAX(ID_Contract) AS MAX_ID FROM Contract";
            Connection connector=DriverManager.getConnection(dbURL);
            PreparedStatement ps=connector.prepareStatement(query);
            ResultSet rs_STT=ps.executeQuery();
            while(rs_STT.next()){
                id=rs_STT.getString("MAX_ID");
            }
        }catch(Exception ex){
            numberID=0;
        }
        
        ancestors="HD"; //C
        numberID=Integer.valueOf(id.substring(2, 5)); //number
        
        if(numberID<9) txtIDContract.setText(ancestors +"00"+ String.valueOf(numberID+1));
        else if(numberID<99) txtIDContract.setText(ancestors +"0"+ String.valueOf(numberID+1));
        else txtIDContract.setText(ancestors + String.valueOf(numberID+1));
    }
    
    //Bam vao bang -> hien thi thong tin ra textview
    private void tblContractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblContractMouseClicked
        int selectedIndex=tblContract.getSelectedRow();
        txtIDContract.setText(tblContract.getValueAt(selectedIndex, 0)+"");
        txtIDOwner.setText(tblContract.getValueAt(selectedIndex, 1)+"");
        txtIDRoom.setText(tblContract.getValueAt(selectedIndex, 2)+"");
        
        String getDate=tblContract.getValueAt(selectedIndex, 3).toString();
        java.util.Date date = null;
        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(getDate);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        dcsDateEnroll.setDate(date);
    }
//GEN-LAST:event_tblContractMouseClicked

    //Bấm nút mở đăng ký thành viên cùng phòng
    private void btnRegisterRoomMateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterRoomMateActionPerformed
        RoomMate rm = new RoomMate();
        rm.setVisible(true);
    }//GEN-LAST:event_btnRegisterRoomMateActionPerformed

    //Bấm nút mở đăng ký người đại diện để đứng đại diện hợp đồng
    private void btnClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientActionPerformed
        ClientForm cf = new ClientForm();
        cf.setVisible(true);
    }//GEN-LAST:event_btnClientActionPerformed

    //Nút làm mới
    Calendar cal=Calendar.getInstance();
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        setIDContract();
        txtIDRoom.setText("");
        txtPhoneNumberOwner.setText("");
        txtIDOwner.setText("");
        dcsDateEnroll.setDate(cal.getTime());
        
        tblContract.removeAll();
        while(tblContract.getRowCount() > 0){
            ((DefaultTableModel)tblContract.getModel()).removeRow(0);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    //Xóa thông tin ở bảng Contract
    private void deleteContractDTB(){
        String idContract=txtIDContract.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="DELETE Contract WHERE ID_Contract=?";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1, idContract);

            ps.executeUpdate();
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //Xóa thông tin ở bảng Room_Info
    private void deleteRoom_InfoDTB(){
        String idContract=txtIDContract.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="DELETE Room_Info WHERE ID_Contract=?;";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1, idContract);

            ps.executeUpdate();
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //Nút xóa
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        String idContract=txtIDContract.getText();
        int confirm=JOptionPane.showConfirmDialog(rootPane, "Ban co chac muon xoa hop dong"+idContract+" khoi danh sach khong?","",JOptionPane.YES_NO_OPTION);
        if(confirm== JOptionPane.YES_OPTION){
            deleteRoom_InfoDTB(); //Xoa thong tin o bang Room_Info
            deleteContractDTB(); //Xoa thong tin o bang Contract
            
            loadInfoRoom();
            btnClearActionPerformed(evt);
        }
    }//GEN-LAST:event_btnDelActionPerformed

    //Sửa đổi thông tin trong bảng Contract
    private void modifyContractDTB(String idOwner, String idRoom, String dateEnroll, String idContract){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="UPDATE Contract SET ID_representativeClient=?, ID_Room=?, Date_Enroll=? WHERE ID_Contract=?;";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);

            ps.setString(1, idOwner);
            ps.setString(2, idRoom);
            ps.setString(3, dateEnroll);
            ps.setString(4, idContract);

            ps.executeUpdate();
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //Sửa đổi thông tin trong bảng Room_Info
    private void modifyRoom_InfoDTB(String idOwner, String idRoom, String idContract){
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="UPDATE Room_Info SET ID_Room=?, ID_Client=? WHERE ID_Contract=?";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            
            ps.setString(1, idRoom);
            ps.setString(2, idOwner);
            ps.setString(3, idContract);

            ps.executeUpdate();
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //Cap nhat sua doi Contract (Nút sửa)
    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        String idContract=txtIDContract.getText();
        String idOwner=txtIDOwner.getText();
        String idRoom=txtIDRoom.getText();
        String dateEnroll=new SimpleDateFormat("yyyy-MM-dd").format(dcsDateEnroll.getDate());

        int confirm=JOptionPane.showConfirmDialog(rootPane, "Ban co chac muon chinh sua thong tin khong?","",JOptionPane.YES_NO_OPTION);
        if(confirm== JOptionPane.YES_OPTION){
            modifyContractDTB(idOwner, idRoom, dateEnroll, idContract); //Sua thong tin trong bang Contract
            modifyRoom_InfoDTB(idOwner, idRoom, idContract); //Sua thong tin trong bang Room_Info
            addTableContract(idContract, idOwner, idRoom, dateEnroll);
            loadInfoRoom();
        }
    }//GEN-LAST:event_btnModifyActionPerformed

    //Kiểm tra thông tin nhập vào
    private boolean confirmInfoClient(){
        boolean check=true;
        if(txtPhoneNumberOwner.getText().equals("")==true || txtIDRoom.getText().equals("")==true){
            JOptionPane.showMessageDialog(rootPane, "Phai nhap day du cac thong tin co ban nhu: Ten, So phong");
            check=false;
        }
        return check;
    }
    
    //Them thong tin nguoi thue vao bang Contract
    private void addTableContract(String idContract, String idOwner, String idRoom, String dateEnroll){
        DefaultTableModel m=new DefaultTableModel(new Object[]{"ID Contract", "ID Owner","ID Room", "Date Enroll"}, 0);
        tblContract.setModel(m);
        ((DefaultTableModel)tblContract.getModel()).addRow(new Object[]{
            idContract, idOwner, idRoom, dateEnroll});
    }
    
    //Them thong tin da nhap vao CSDL Table Contract
    private void insertIntoContractDTB(){
        String query="INSERT INTO Contract VALUES(?,?,?,?,null,?);";
            String idContract=txtIDContract.getText();
            String idOwner=txtIDOwner.getText();
            String idRoom=txtIDRoom.getText();
            String dateEnroll=new SimpleDateFormat("yyyy-MM-dd").format(dcsDateEnroll.getDate());
            String status = "live";
            
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, idContract);
                ps.setString(2, idOwner);
                ps.setString(3, idRoom);
                ps.setString(4, dateEnroll);
                ps.setString(5, status);

                ps.executeUpdate();
            }catch(Exception ex){
                System.out.println(ex);
            }
            addTableContract(idContract, idOwner, idRoom, dateEnroll);
    }
    
    //Them thong tin da nhap vao CSDL Table Room_Info
    private void insertIntoRoomInfoDTB(){
        String query="INSERT INTO Room_Info VALUES (?,?,?);";
        String idRoom=txtIDRoom.getText();    
        String idOwner=txtIDOwner.getText();
        String idContract=txtIDContract.getText();
            
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1, idRoom);
            ps.setString(2, idOwner);
            ps.setString(3, idContract);

            ps.executeUpdate();
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //nút Thêm
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(confirmInfoClient()==true){
            //Them thong tin vao bang Contract trong CSDL
            insertIntoContractDTB();

            //Them Thong Tin vao Bang Room_Info trong CSDL
            insertIntoRoomInfoDTB();

            loadInfoRoom();
            //btnClearActionPerformed(evt);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    //Sau khi nhập sdt, bấm phím Enter -> sinh ID_Client đã đăng ký
    private void txtPhoneNumberOwnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberOwnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            try{
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String query="SELECT ID_Client FROM Client WHERE Phone_Number=?;";
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, txtPhoneNumberOwner.getText());
                ResultSet rs = ps.executeQuery();

                while (rs.next()) {
                    txtIDOwner.setText(rs.getString("ID_Client"));
                }
            }catch(Exception ex){
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_txtPhoneNumberOwnerKeyPressed

//    -----------------------------------------Tab Quan Ly Hop Dong----------------------------------
    private void loadTableContractManagement(){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT Co.ID_Contract, Ci.Name_Client, R.ID_Type, R.ID_Room, R.Room_Title, Co.Date_Enroll, Co.Date_End, Co.status \n" +
                        "FROM Contract Co JOIN Client Ci ON Co.ID_representativeClient=Ci.ID_Client\n" +
                        "JOIN Room R ON Co.ID_Room=R.ID_Room";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel m=new DefaultTableModel(new Object[]{"ID Contract","Owner","ID Type","ID Room","Room Title", "Date Enroll", "Date End", "Status"}, 0);
               tblContract_Management.setModel(m);
            while (rs.next()) {
                ((DefaultTableModel)tblContract_Management.getModel()).addRow(new Object[]{
                    rs.getString(1), 
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getDate(6),
                    rs.getDate(7),
                    rs.getString(8)
                }); 
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
//  -----------------------------------------Tab Quan Ly Tai Khoan----------------------------------
    private void loadTableAccountManagement(){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT A.ID_Client, C.Name_Client, A.Username, A.Password FROM Account A JOIN Client C ON A.ID_Client=C.ID_Client";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel m=new DefaultTableModel(new Object[]{"ID Client","Name Client","User Name","Password"}, 0);
               tblAccount.setModel(m);
            while (rs.next()) {
                ((DefaultTableModel)tblAccount.getModel()).addRow(new Object[]{
                    rs.getString(1), 
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                }); 
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    //Bấm vào bảng -> hiển thị thông tin ra các textview
    private void tblAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccountMouseClicked
        int selectedIndex=tblAccount.getSelectedRow();
        txtIDClient_Account.setText(tblAccount.getValueAt(selectedIndex, 0)+"");
        txtNameClient_Account.setText(tblAccount.getValueAt(selectedIndex, 1)+"");
        txtUserName.setText(tblAccount.getValueAt(selectedIndex, 2)+"");
        txtPassword.setText(tblAccount.getValueAt(selectedIndex, 3)+"");
    }//GEN-LAST:event_tblAccountMouseClicked

    //Nut Lam moi
    private void btnClearInfoAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearInfoAccountActionPerformed
        txtIDClient_Account.setText("");
        txtNameClient_Account.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
    }//GEN-LAST:event_btnClearInfoAccountActionPerformed

    private boolean checkInfoInputAccount(){
        boolean check=true;
        if(txtNameClient_Account.getText().equals("")==true || txtUserName.getText().equals("")==true
                || txtPassword.getText().equals("")==true){
            JOptionPane.showMessageDialog(rootPane, "Phai nhap day du cac thong tin");
            check=false;
        }
        return check;
    }
    
    //Nut Them tai khoan
    private void btnAddAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAccountActionPerformed
        if(checkInfoInputAccount()){
            String query="INSERT INTO Account VALUES(?,?,?);";
            String idClient_Account=txtIDClient_Account.getText();    
            String userName=txtUserName.getText();
            String pass=txtPassword.getText();

            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, idClient_Account);
                ps.setString(2, userName);
                ps.setString(3, pass);

                ps.executeUpdate();
            }catch(Exception ex){
                System.out.println(ex);
            }
            loadTableAccountManagement();
            btnClearInfoAccountActionPerformed(evt);
        }
    }//GEN-LAST:event_btnAddAccountActionPerformed

    //Nut sua tai khoan
    private void btnModifyAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyAccountActionPerformed
        String idClient_Account=txtIDClient_Account.getText();    
        String userName=txtUserName.getText();
        String pass=txtPassword.getText();

        int confirm=JOptionPane.showConfirmDialog(rootPane, "Ban co chac muon chinh sua thong tin khong?","",JOptionPane.YES_NO_OPTION);
        if(confirm== JOptionPane.YES_OPTION){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String query="UPDATE Account SET Username=?, Password=? WHERE ID_Client=?";
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);

                ps.setString(1, userName);
                ps.setString(2, pass);
                ps.setString(3, idClient_Account);

                ps.executeUpdate();
            }catch(Exception ex){
                System.out.println(ex);
            }
            btnClearInfoAccountActionPerformed(evt);
            loadTableAccountManagement();
        }
    }//GEN-LAST:event_btnModifyAccountActionPerformed

    //Nut xoa tai khoan
    private void btnDelAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelAccountActionPerformed
        String idClient_Account=txtIDClient_Account.getText(); 
        int confirm=JOptionPane.showConfirmDialog(rootPane, "Ban co chac muon xoa khoi danh sach khong?","",JOptionPane.YES_NO_OPTION);
        if(confirm== JOptionPane.YES_OPTION){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String query="DELETE Account WHERE ID_Client=?";
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, idClient_Account);

                ps.executeUpdate();
            }catch(Exception ex){
                System.out.println(ex);
            }
            btnClearInfoAccountActionPerformed(evt);
            loadTableAccountManagement();
        }
    }//GEN-LAST:event_btnDelAccountActionPerformed

    private void txtIDClient_AccountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDClient_AccountKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            try{
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String query="SELECT Name_Client FROM Client WHERE ID_Client=?";
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, txtIDClient_Account.getText());
                ResultSet rs = ps.executeQuery();

                while (rs.next()) {
                    txtNameClient_Account.setText(rs.getString("Name_Client"));
                }
            }catch(Exception ex){
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_txtIDClient_AccountKeyPressed

    //Nút refresh của tab Quản Lý hợp đồng
    private void btnRefreshContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshContractActionPerformed
        loadTableContractManagement();
    }//GEN-LAST:event_btnRefreshContractActionPerformed

    //    -----------------------------------------Tab Quan Ly Phi Sinh Hoat----------------------------------
    private void loadTableBillManagement(){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT B.ID_Bill, C.ID_Contract, C.ID_Room, C.status, C.Date_Enroll, B.Date_Note, B.Electric, B.Water, B.Internet,B.Money_Room,B.Cost\n" +
                            "FROM Bill B JOIN Contract C ON B.ID_Contract=C.ID_Contract";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel m=new DefaultTableModel(new Object[]{"ID Bill","ID Contract","ID Room","Status", "Date Enroll", "Date Note", "Electric","Water","Internet","Money Room","Cost"}, 0);
               tblBill.setModel(m);
            while (rs.next()) {
                ((DefaultTableModel)tblBill.getModel()).addRow(new Object[]{
                    rs.getString(1), 
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getDate(5),
                    rs.getDate(6),
                    rs.getInt(7),
                    rs.getInt(8),
                    rs.getInt(9),
                    rs.getInt(10),
                    rs.getInt(11)
                }); 
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
        setCurretTime();
    }
    
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    Calendar calendar=Calendar.getInstance();
    private void setCurretTime(){
        txtCurrentTime.setText(dateFormat.format(calendar.getTime()));
    }

    //Load bảng thông báo nhắc đóng tiền
    private void loadTableNotiInBill(){
        String currentTime= dateFormat.format(calendar.getTime());
        String day=currentTime.substring(8, 10);
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT Co.ID_Contract,Co.ID_Room,Ci.Name_Client, Co.Date_Enroll\n" +
                            "FROM Contract Co JOIN Client Ci ON Co.ID_representativeClient=Ci.ID_Client\n" +
                            "WHERE Day(Date_Enroll)=?";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1, day);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel m=new DefaultTableModel(new Object[]{"ID Contract","ID Room","Owner","Date Enroll"}, 0);
               tblNoti.setModel(m);
            while (rs.next()) {
                ((DefaultTableModel)tblNoti.getModel()).addRow(new Object[]{
                    rs.getString(1), 
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4)
                }); 
            }
            
        }catch(Exception ex){
            System.out.println(ex);
        }
    }
    
    
    //Set ID Bill
    //Sinh ID Contract tự động
    private void setIDBill(){
        String id=null;
        String ancestors; //Tien to B
        int numberID; //so duoi 000x || 0xx
        
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT MAX(ID_Bill) AS MAX_ID FROM Bill";
            Connection connector=DriverManager.getConnection(dbURL);
            PreparedStatement ps=connector.prepareStatement(query);
            ResultSet rs_STT=ps.executeQuery();
            while(rs_STT.next()){
                id=rs_STT.getString("MAX_ID");
            }
        }catch(Exception ex){
            numberID=0;
        }
        
        ancestors="B"; //B
        numberID=Integer.valueOf(id.substring(1, 5)); //number
        
        if(numberID<9) txtIDBill.setText(ancestors +"000"+ String.valueOf(numberID+1));
        else if(numberID<99) txtIDBill.setText(ancestors +"00"+ String.valueOf(numberID+1));
        else if(numberID<999) txtIDBill.setText(ancestors +"0"+ String.valueOf(numberID+1));
        else txtIDBill.setText(ancestors + String.valueOf(numberID+1));
    }
    
    private void btnCalculatorBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculatorBillActionPerformed
        getIDContractFromIDRoom();
        setIDBill();
        
        int electric=Integer.valueOf(txtElec.getText());
        int water=Integer.valueOf(txtWater.getText());
        
        int price_electric= electric*3000;
        int price_water= water*7000;
        int price_internet= 25000;
        int totalPrice=price_electric+price_water+price_internet;
        
        txtElecPrice.setText(String.valueOf(price_electric));
        txtWaterPrice.setText(String.valueOf(price_water));
        txtInterPrice.setText(String.valueOf(price_internet));
        txtTotal.setText(String.valueOf(totalPrice));
        
        btnPay.setEnabled(true);
    }//GEN-LAST:event_btnCalculatorBillActionPerformed


    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        String idBill=txtIDBill.getText();
        String idContract_Bill=txtIDContract_Bill.getText();
        String currentTime=dateFormat.format(calendar.getTime());
        String electric=txtElec.getText();
        String water=txtWater.getText();
        int internet=1;
        int costRoom=getMoneyRoom();
        String cost=txtTotal.getText();
            
        try {
            String query="INSERT INTO Bill VALUES(?,?,?, ?, ?, ?, ?, ?);";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, idBill);
                ps.setString(2, idContract_Bill);
                ps.setString(3, currentTime);
                ps.setString(4, electric);
                ps.setString(5, water);
                ps.setInt(6, internet);
                ps.setInt(7, costRoom);
                ps.setString(8, cost);
                
                ps.executeUpdate();
            }catch(Exception ex){
                System.out.println(ex);
            }
        loadTableBillManagement();
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnCancelContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelContractActionPerformed
        String currentTime=dateFormat.format(calendar.getTime());
        int confirm=JOptionPane.showConfirmDialog(rootPane, "Ban co chac muon HUY HOP DONG khong?","",JOptionPane.YES_NO_OPTION);
        if(confirm== JOptionPane.YES_OPTION){
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String query="UPDATE Contract SET Date_End=?, status='Expire' WHERE ID_Contract=?;";
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, currentTime);
                ps.setString(2, txtIDContract_Bill.getText());

                ps.executeUpdate();
            }catch(Exception ex){
                System.out.println(ex);
            }
            JOptionPane.showMessageDialog(rootPane, "Đã hủy hợp đồng!");
        }
    }//GEN-LAST:event_btnCancelContractActionPerformed

    private void btnRefreshTableRoomOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTableRoomOrderActionPerformed
        loadInfoRoom();
    }//GEN-LAST:event_btnRefreshTableRoomOrderActionPerformed

    private void btnRefreshTableAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTableAccountActionPerformed
        loadTableAccountManagement();
    }//GEN-LAST:event_btnRefreshTableAccountActionPerformed

    private void btnRefreshBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshBillActionPerformed
        loadTableNotiInBill();
        loadTableBillManagement();
    }//GEN-LAST:event_btnRefreshBillActionPerformed

    
    private void getIDContractFromIDRoom(){
        try{
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String query="SELECT C.ID_Contract FROM Room R JOIN Contract C ON R.ID_Room=C.ID_Room WHERE R.ID_Room=? AND C.status='Live'";
                Connection con=DriverManager.getConnection(dbURL);
                PreparedStatement ps=con.prepareStatement(query);
                ps.setString(1, txtIDRoom_Bill.getText());
                ResultSet rs = ps.executeQuery();

                while (rs.next()) {
                    txtIDContract_Bill.setText(rs.getString("ID_Contract"));
                }
            }catch(Exception ex){
                System.out.println(ex);
            }
    }
    
    private int getMoneyRoom(){
        int moneyRoom=0;
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String query="SELECT T.Money FROM Room R JOIN TypeRoom T ON R.ID_Type=T.ID_Type WHERE R.ID_Room=?;";
            Connection con=DriverManager.getConnection(dbURL);
            PreparedStatement ps=con.prepareStatement(query);
            ps.setString(1, txtIDRoom_Bill.getText());
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                moneyRoom=rs.getInt("Money");
            }
        }catch(Exception ex){
            System.out.println(ex);
        }
        return moneyRoom;
    }
             
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OwnerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OwnerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OwnerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OwnerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OwnerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Password;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddAccount;
    private javax.swing.JButton btnCalculatorBill;
    private javax.swing.JButton btnCancelContract;
    private javax.swing.JButton btnCancelTotal;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearInfoAccount;
    private javax.swing.JButton btnClient;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDelAccount;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnModifyAccount;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnRefreshBill;
    private javax.swing.JButton btnRefreshContract;
    private javax.swing.JButton btnRefreshTableAccount;
    private javax.swing.JButton btnRefreshTableRoomOrder;
    private javax.swing.JButton btnRegisterRoomMate;
    private javax.swing.JButton btnWarn;
    private com.toedter.calendar.JDateChooser dcsDateEnroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblAccount;
    private javax.swing.JTable tblAdd;
    private javax.swing.JTable tblBill;
    private javax.swing.JTable tblContract;
    private javax.swing.JTable tblContract_Management;
    private javax.swing.JTable tblNoti;
    private javax.swing.JTextField txtCurrentTime;
    private javax.swing.JTextField txtElec;
    private javax.swing.JTextField txtElecPrice;
    private javax.swing.JTextField txtIDBill;
    private javax.swing.JTextField txtIDClient_Account;
    private javax.swing.JTextField txtIDContract;
    private javax.swing.JTextField txtIDContract_Bill;
    private javax.swing.JTextField txtIDOwner;
    private javax.swing.JTextField txtIDRoom;
    private javax.swing.JTextField txtIDRoom_Bill;
    private javax.swing.JTextField txtInterPrice;
    private javax.swing.JTextField txtNameClient_Account;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumberOwner;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtWater;
    private javax.swing.JTextField txtWaterPrice;
    // End of variables declaration//GEN-END:variables
}
